{
	"info": {
		"_postman_id": "4a6f1a31-de10-4e3e-94a6-086dd995475a",
		"name": "Order REST Scenario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fe85f928-b39e-402b-8ba0-1c93d663974e",
						"exec": [
							"pm.test(\"1. Status code is 201 Created.\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"2. Content-Type is present.\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"var schema = pm.environment.get(\"schema\");",
							"",
							"pm.test(\"3. Schema is valid.\", function(){",
							"    var jsonData = pm.response.json();",
							"    var result = tv4.validate(jsonData, schema, false, true);",
							"    if (result !== true)",
							"        console.log(\"Schema validation failed: \"+ tv4.error);",
							"    pm.expect(result).to.be.true;",
							"});",
							"",
							"var expectedDescription = data.expectedNewDescription;",
							"var expectedCostInCents = data.expectedNewCostInCents;",
							"var NumOfOrders = pm.environment.get(\"NumOfOrders\");",
							"",
							"pm.test(\"4. Response validation.\", function(){",
							"    var jsonData = pm.response.json();",
							"    idFromResponse = jsonData.id;",
							"    pm.expect(jsonData.description).to.be.eql(expectedDescription);",
							"    pm.expect(jsonData.costInCents).to.be.eql(expectedCostInCents);",
							"    if (jsonData.id < NumOfOrders)",
							"        postman.setNextRequest(\"CreateOrder\");",
							"});",
							"",
							"var prev = \"CreateOrder\";",
							"pm.environment.set(\"prev\", prev);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c147d474-834f-4e9b-9344-96d1760b8b15",
						"exec": [
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://localhost:8080/order\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"description\",",
							"    \"costInCents\",",
							"    \"complete\",",
							"    \"_links\",",
							"    \"id\"",
							"  ],",
							"  \"properties\": {",
							"    \"description\": {",
							"      \"$id\": \"#/properties/description\",",
							"      \"type\": \"string\",",
							"      \"title\": \"The Description Schema\",",
							"      \"default\": \"\",",
							"      \"examples\": [",
							"        \"New order made.\"",
							"      ],",
							"      \"pattern\": \"^(.*)$\"",
							"    },",
							"    \"costInCents\": {",
							"      \"$id\": \"#/properties/costInCents\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Costincents Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        5",
							"      ]",
							"    },",
							"    \"complete\": {",
							"      \"$id\": \"#/properties/complete\",",
							"      \"type\": \"boolean\",",
							"      \"title\": \"The Complete Schema\",",
							"      \"default\": false,",
							"      \"examples\": [",
							"        false",
							"      ]",
							"    },",
							"    \"_links\": {",
							"      \"$id\": \"#/properties/_links\",",
							"      \"type\": \"object\",",
							"      \"title\": \"The _links Schema\",",
							"      \"required\": [",
							"        \"self\",",
							"        \"update\",",
							"        \"delete\"",
							"      ],",
							"      \"properties\": {",
							"        \"self\": {",
							"          \"$id\": \"#/properties/_links/properties/self\",",
							"          \"type\": \"object\",",
							"          \"title\": \"The Self Schema\",",
							"          \"required\": [",
							"            \"href\"",
							"          ],",
							"          \"properties\": {",
							"            \"href\": {",
							"              \"$id\": \"#/properties/_links/properties/self/properties/href\",",
							"              \"type\": \"string\",",
							"              \"title\": \"The Href Schema\",",
							"              \"default\": \"\",",
							"              \"examples\": [",
							"                \"http://localhost:8080/order/1\"",
							"              ],",
							"              \"pattern\": \"^(.*)$\"",
							"            }",
							"          }",
							"        },",
							"        \"update\": {",
							"          \"$id\": \"#/properties/_links/properties/update\",",
							"          \"type\": \"object\",",
							"          \"title\": \"The Update Schema\",",
							"          \"required\": [",
							"            \"href\"",
							"          ],",
							"          \"properties\": {",
							"            \"href\": {",
							"              \"$id\": \"#/properties/_links/properties/update/properties/href\",",
							"              \"type\": \"string\",",
							"              \"title\": \"The Href Schema\",",
							"              \"default\": \"\",",
							"              \"examples\": [",
							"                \"http://localhost:8080/order/1\"",
							"              ],",
							"              \"pattern\": \"^(.*)$\"",
							"            }",
							"          }",
							"        },",
							"        \"delete\": {",
							"          \"$id\": \"#/properties/_links/properties/delete\",",
							"          \"type\": \"object\",",
							"          \"title\": \"The Delete Schema\",",
							"          \"required\": [",
							"            \"href\"",
							"          ],",
							"          \"properties\": {",
							"            \"href\": {",
							"              \"$id\": \"#/properties/_links/properties/delete/properties/href\",",
							"              \"type\": \"string\",",
							"              \"title\": \"The Href Schema\",",
							"              \"default\": \"\",",
							"              \"examples\": [",
							"                \"http://localhost:8080/order/1\"",
							"              ],",
							"              \"pattern\": \"^(.*)$\"",
							"            }",
							"          }",
							"        }",
							"      }",
							"    },",
							"    \"id\": {",
							"      \"$id\": \"#/properties/id\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Id Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        1",
							"      ]",
							"    }",
							"  }",
							"};",
							"",
							"pm.environment.set(\"schema\", schema);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"description\": \"New order made.\",\n    \"costInCents\": 5,\n    \"complete\": false\n}"
				},
				"url": {
					"raw": "http://localhost:8080/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "AllOrders",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc1cf73f-b591-4141-9000-7badb5ddb3fe",
						"exec": [
							"pm.test(\"1. Status code is 200 OK.\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"2. Content-Type is present.\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"var schema = pm.environment.get(\"schema\");",
							"",
							"pm.test(\"3. Schema is valid.\", function(){",
							"    var jsonData = pm.response.json();",
							"    var result = tv4.validate(jsonData, schema, false, true);",
							"    if (result !== true)",
							"        console.log(\"Schema validation failed: \"+ tv4.error);",
							"    pm.expect(result).to.be.true;",
							"});",
							"",
							"pm.test(\"4. Key string validation.\", function(){",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(obj){",
							"        pm.expect(obj).to.have.property(\"description\");",
							"        pm.expect(obj).to.have.property(\"costInCents\");",
							"        pm.expect(obj).to.have.property(\"complete\");",
							"        pm.expect(obj).to.have.property(\"_links\");",
							"        pm.expect(obj._links).to.have.property(\"self\");",
							"        pm.expect(obj._links.self).to.have.property(\"href\");",
							"        pm.expect(obj._links).to.have.property(\"update\");",
							"        pm.expect(obj._links.update).to.have.property(\"href\");",
							"        pm.expect(obj._links).to.have.property(\"delete\");",
							"        pm.expect(obj._links.delete).to.have.property(\"href\");",
							"        pm.expect(obj).to.have.property(\"id\");",
							"    });",
							"    pm.test(\"4.1. Total number of orders: \" + jsonData.length);",
							"});",
							"",
							"if (prev == \"DeleteOrder\")",
							"    postman.setnextrequest(null);",
							"",
							"var prev = \"AllOrders\";",
							"pm.environment.set(\"prev\", prev);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "dd262697-c274-4514-8ccf-729a69c5e152",
						"exec": [
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://localhost:8080/order\",",
							"  \"type\": \"array\",",
							"  \"title\": \"The Root Schema\",",
							"  \"items\": {",
							"    \"$id\": \"#/items\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Items Schema\",",
							"    \"required\": [",
							"      \"description\",",
							"      \"costInCents\",",
							"      \"complete\",",
							"      \"_links\",",
							"      \"id\"",
							"    ],",
							"    \"properties\": {",
							"      \"description\": {",
							"        \"$id\": \"#/items/properties/description\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Description Schema\",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"New order made.\"",
							"        ],",
							"        \"pattern\": \"^(.*)$\"",
							"      },",
							"      \"costInCents\": {",
							"        \"$id\": \"#/items/properties/costInCents\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Costincents Schema\",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          5",
							"        ]",
							"      },",
							"      \"complete\": {",
							"        \"$id\": \"#/items/properties/complete\",",
							"        \"type\": \"boolean\",",
							"        \"title\": \"The Complete Schema\",",
							"        \"default\": false,",
							"        \"examples\": [",
							"          false",
							"        ]",
							"      },",
							"      \"_links\": {",
							"        \"$id\": \"#/items/properties/_links\",",
							"        \"type\": \"object\",",
							"        \"title\": \"The _links Schema\",",
							"        \"required\": [",
							"          \"self\",",
							"          \"update\",",
							"          \"delete\"",
							"        ],",
							"        \"properties\": {",
							"          \"self\": {",
							"            \"$id\": \"#/items/properties/_links/properties/self\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The Self Schema\",",
							"            \"required\": [",
							"              \"href\"",
							"            ],",
							"            \"properties\": {",
							"              \"href\": {",
							"                \"$id\": \"#/items/properties/_links/properties/self/properties/href\",",
							"                \"type\": \"string\",",
							"                \"title\": \"The Href Schema\",",
							"                \"default\": \"\",",
							"                \"examples\": [",
							"                  \"http://localhost:8080/order/2\"",
							"                ],",
							"                \"pattern\": \"^(.*)$\"",
							"              }",
							"            }",
							"          },",
							"          \"update\": {",
							"            \"$id\": \"#/items/properties/_links/properties/update\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The Update Schema\",",
							"            \"required\": [",
							"              \"href\"",
							"            ],",
							"            \"properties\": {",
							"              \"href\": {",
							"                \"$id\": \"#/items/properties/_links/properties/update/properties/href\",",
							"                \"type\": \"string\",",
							"                \"title\": \"The Href Schema\",",
							"                \"default\": \"\",",
							"                \"examples\": [",
							"                  \"http://localhost:8080/order/2\"",
							"                ],",
							"                \"pattern\": \"^(.*)$\"",
							"              }",
							"            }",
							"          },",
							"          \"delete\": {",
							"            \"$id\": \"#/items/properties/_links/properties/delete\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The Delete Schema\",",
							"            \"required\": [",
							"              \"href\"",
							"            ],",
							"            \"properties\": {",
							"              \"href\": {",
							"                \"$id\": \"#/items/properties/_links/properties/delete/properties/href\",",
							"                \"type\": \"string\",",
							"                \"title\": \"The Href Schema\",",
							"                \"default\": \"\",",
							"                \"examples\": [",
							"                  \"http://localhost:8080/order/2\"",
							"                ],",
							"                \"pattern\": \"^(.*)$\"",
							"              }",
							"            }",
							"          }",
							"        }",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"#/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema\",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          2",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"pm.environment.set(\"schema\", schema);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cecae913-6c30-44bf-b4e2-c2260c6519b5",
						"exec": [
							"pm.test(\"1. Status code is 200 OK.\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"2. Content-Type is present.\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"var id = Number(pm.environment.get(\"id\"));",
							"var expectedDescription = data.expectedDescription;",
							"var expectedCostInCents = data.expectedCostInCents;",
							"//var expectedDescription = pm.globals.get(\"expectedDescription\");",
							"//var expectedCostInCents = pm.globals.get(\"expectedCostInCents\");",
							"",
							"pm.test(\"3. Update checking.\", function(){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.eql(id);",
							"    pm.expect(jsonData.description).to.be.eql(expectedDescription);",
							"    pm.expect(jsonData.costInCents).to.be.eql(expectedCostInCents);",
							"    pm.expect(jsonData.complete).to.be.eql(true);",
							"});",
							"",
							"var expected = pm.environment.get(\"expected\");",
							"",
							"pm.test(\"4. Response validation.\", function(){",
							"    var jsonData = pm.response.json();",
							"    expected = expected + id;",
							"    pm.expect(jsonData._links.self.href).to.be.eql(expected);",
							"    pm.expect(jsonData._links.update.href).to.be.eql(expected);",
							"    pm.expect(jsonData._links.delete.href).to.be.eql(expected);",
							"});",
							"",
							"var prev = \"UpdateOrder\";",
							"pm.environment.set(\"prev\", prev);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "315b4161-d142-4d57-a084-11d7822c50ac",
						"exec": [
							"var expected = \"http://localhost:8080/order/\";",
							"",
							"pm.environment.set(\"expected\", expected);",
							"",
							"var id = 2;",
							"pm.environment.set(\"id\", id);",
							"",
							"var expectedDescription = \"Update values for this order.\";",
							"pm.globals.set(\"expectedDescription\", expectedDescription);",
							"",
							"var expectedCostInCents = 10;",
							"pm.globals.set(\"expectedCostInCents\", expectedCostInCents);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"description\": \"Update values for this order.\",\n\t\"costInCents\": 10,\n    \"complete\": true\n}"
				},
				"url": {
					"raw": "http://localhost:8080/order/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"order",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "OrderByID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "78de19db-404b-4f32-96d6-8396035ba7a6",
						"exec": [
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://localhost:8080/order\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"description\",",
							"    \"costInCents\",",
							"    \"complete\",",
							"    \"_links\",",
							"    \"id\"",
							"  ],",
							"  \"properties\": {",
							"    \"description\": {",
							"      \"$id\": \"#/properties/description\",",
							"      \"type\": \"string\",",
							"      \"title\": \"The Description Schema\",",
							"      \"default\": \"\",",
							"      \"examples\": [",
							"        \"Update values for this order.\"",
							"      ],",
							"      \"pattern\": \"^(.*)$\"",
							"    },",
							"    \"costInCents\": {",
							"      \"$id\": \"#/properties/costInCents\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Costincents Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        10",
							"      ]",
							"    },",
							"    \"complete\": {",
							"      \"$id\": \"#/properties/complete\",",
							"      \"type\": \"boolean\",",
							"      \"title\": \"The Complete Schema\",",
							"      \"default\": false,",
							"      \"examples\": [",
							"        true",
							"      ]",
							"    },",
							"    \"_links\": {",
							"      \"$id\": \"#/properties/_links\",",
							"      \"type\": \"object\",",
							"      \"title\": \"The _links Schema\",",
							"      \"required\": [",
							"        \"self\",",
							"        \"update\",",
							"        \"delete\"",
							"      ],",
							"      \"properties\": {",
							"        \"self\": {",
							"          \"$id\": \"#/properties/_links/properties/self\",",
							"          \"type\": \"object\",",
							"          \"title\": \"The Self Schema\",",
							"          \"required\": [",
							"            \"href\"",
							"          ],",
							"          \"properties\": {",
							"            \"href\": {",
							"              \"$id\": \"#/properties/_links/properties/self/properties/href\",",
							"              \"type\": \"string\",",
							"              \"title\": \"The Href Schema\",",
							"              \"default\": \"\",",
							"              \"examples\": [",
							"                \"http://localhost:8080/order/2\"",
							"              ],",
							"              \"pattern\": \"^(.*)$\"",
							"            }",
							"          }",
							"        },",
							"        \"update\": {",
							"          \"$id\": \"#/properties/_links/properties/update\",",
							"          \"type\": \"object\",",
							"          \"title\": \"The Update Schema\",",
							"          \"required\": [",
							"            \"href\"",
							"          ],",
							"          \"properties\": {",
							"            \"href\": {",
							"              \"$id\": \"#/properties/_links/properties/update/properties/href\",",
							"              \"type\": \"string\",",
							"              \"title\": \"The Href Schema\",",
							"              \"default\": \"\",",
							"              \"examples\": [",
							"                \"http://localhost:8080/order/2\"",
							"              ],",
							"              \"pattern\": \"^(.*)$\"",
							"            }",
							"          }",
							"        },",
							"        \"delete\": {",
							"          \"$id\": \"#/properties/_links/properties/delete\",",
							"          \"type\": \"object\",",
							"          \"title\": \"The Delete Schema\",",
							"          \"required\": [",
							"            \"href\"",
							"          ],",
							"          \"properties\": {",
							"            \"href\": {",
							"              \"$id\": \"#/properties/_links/properties/delete/properties/href\",",
							"              \"type\": \"string\",",
							"              \"title\": \"The Href Schema\",",
							"              \"default\": \"\",",
							"              \"examples\": [",
							"                \"http://localhost:8080/order/2\"",
							"              ],",
							"              \"pattern\": \"^(.*)$\"",
							"            }",
							"          }",
							"        }",
							"      }",
							"    },",
							"    \"id\": {",
							"      \"$id\": \"#/properties/id\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Id Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        2",
							"      ]",
							"    }",
							"  }",
							"};",
							"",
							"pm.environment.set(\"schema\", schema);",
							"",
							"var id = pm.environment.get(\"id\");",
							"var expected = 'http://localhost:8080/order/' + id;",
							"pm.environment.set(\"expected\", expected);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1875fa5f-72f9-4e0d-8c7d-7c2ed55281ff",
						"exec": [
							"pm.test(\"1. Status code is 200 OK.\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"2. Content-Type is present.\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"var schema = pm.environment.get(\"schema\");",
							"",
							"pm.test(\"3. Schema is valid.\", function(){",
							"    var jsonData = pm.response.json();",
							"    var result = tv4.validate(jsonData, schema, false, true);",
							"    if (result !== true)",
							"        console.log(\"Schema validation failed: \"+ tv4.error);",
							"    pm.expect(result).to.be.true;",
							"});",
							"",
							"var expected = pm.environment.get(\"expected\");",
							"var id = Number(pm.environment.get(\"id\"));",
							"",
							"pm.test(\"4. Value checking.\", function(){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.eql(id);",
							"    pm.expect(jsonData._links.self.href).to.be.eql(expected);",
							"    pm.expect(jsonData._links.update.href).to.be.eql(expected);",
							"    pm.expect(jsonData._links.delete.href).to.be.eql(expected);",
							"    id = 1;",
							"    pm.environment.set(\"id\", id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/order/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"order",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8429445e-d722-47bd-b011-dedf3102fc02",
						"exec": [
							"pm.test(\"1. Status code is 204 No Content.\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"var expected = data.expected;",
							"var DeleteOrder2Request = pm.environment.get(\"DeleteOrder2Request\");",
							"var DeleteOrder3Request = pm.environment.get(\"DeleteOrder3Request\");",
							"var DeleteOrder4Request = pm.environment.get(\"DeleteOrder4Request\");",
							"var DeleteOrder5Request = pm.environment.get(\"DeleteOrder5Request\");",
							"",
							"pm.test(\"2.1. Delete Order 1.\", function(){",
							"    pm.sendRequest(DeleteOrder2Request , function (err, res) {",
							"        pm.test(\"2.2. Delete Order 2.\", function(){",
							"            pm.expect(res).to.have.status(204);",
							"        });",
							"        pm.sendRequest(DeleteOrder3Request , function (err, res) {",
							"            pm.test(\"2.3. Delete Order 3.\", function(){",
							"                pm.expect(res).to.have.status(204);",
							"            });",
							"            pm.sendRequest(DeleteOrder4Request , function (err, res) {",
							"                pm.test(\"2.4. Delete Order 4.\", function(){",
							"                    pm.expect(res).to.have.status(204);",
							"                });",
							"                pm.sendRequest(DeleteOrder5Request , function (err, res) {",
							"                    pm.test(\"2.5. Delete Order 5.\", function(){",
							"                        pm.expect(res).to.have.status(204);",
							"                    });",
							"                });",
							"            });",
							"        });",
							"    });",
							"});",
							"",
							"var prev = \"DeleteOrder\";",
							"pm.environment.set(\"prev\", prev);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9ce8789a-85eb-457d-a966-25555ee373a7",
						"exec": [
							"/*var expected = \"http://localhost:8080/order/\";",
							"pm.environment.set(\"expected\", expected);",
							"*/",
							"var expected = data.expected;",
							"",
							"const DeleteOrder2Request = {",
							"    url: expected+2,",
							"    method: 'DELETE',",
							"    header:'Content-Type:application/json' ",
							"};",
							"pm.environment.set(\"DeleteOrder2Request\", DeleteOrder2Request);",
							"",
							"const DeleteOrder3Request = {",
							"    url: expected+3,",
							"    method: 'DELETE',",
							"    header:'Content-Type:application/json' ",
							"};",
							"pm.environment.set(\"DeleteOrder3Request\", DeleteOrder3Request);",
							"",
							"const DeleteOrder4Request = {",
							"    url: expected+4,",
							"    method: 'DELETE',",
							"    header:'Content-Type:application/json' ",
							"};",
							"pm.environment.set(\"DeleteOrder4Request\", DeleteOrder4Request);",
							"",
							"const DeleteOrder5Request = {",
							"    url: expected+5,",
							"    method: 'DELETE',",
							"    header:'Content-Type:application/json' ",
							"};",
							"pm.environment.set(\"DeleteOrder5Request\", DeleteOrder5Request);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": {
					"raw": "http://localhost:8080/order/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"order",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}